@using MyFirstMVC.ViewModels

@model MyFirstMVC.ViewModels.PhoneIndexViewModel

@{

    ViewData["Title"] = "Home Page";

}

<br />
<a asp-action="Create">Создать</a>
<br />

<form method="get">
    <div class="form-inline form-group">
        <label class="control-label">Название</label>
        @Html.TextBox("name", Model.Name, htmlAttributes: new {@class = "form-control"})
    </div>
    <div class="form-inline form-group">
        <label for="priceFrom"  class="control-label">Цена от</label>
        @Html.TextBox("priceFrom", Model.PriceFrom, htmlAttributes: new {@class = "form-control"})
    </div>
    <div class="form-inline form-group">
        <label for="priceTo"  class="control-label">до</label>
        @Html.TextBox("priceTo", Model.PriceTo, htmlAttributes: new {@class = "form-control"})
    </div>
    <div class="form-inline form-group">
        <label for="companyId"  class="control-label">Компания</label>

        <select name="companyId">
            <option></option>
            @foreach (var s in Model.Companies)
            {
                if (Model.CompanyId.HasValue && s.Value == Model.CompanyId.Value.ToString())
                {
                    <option selected="selected" value="@s.Value">@s.Text</option>
                }
                else
                {
                    <option value="@s.Value">@s.Text</option>
                }
            }
        </select>
    </div>
    <div class="form-inline form-group">
        <label for="categotyId"  class="control-label">Категория</label>
        
        <select name="categotyId">
                <option></option>
                @foreach (var s in Model.Categories)
                {
                    if (Model.CategoryId.HasValue && s.Value == Model.CategoryId.Value.ToString())
                    {
                        <option selected="selected" value="@s.Value">@s.Text</option>
                    }
                    else
                    {
                        <option value="@s.Value">@s.Text</option>
                    }
                }
        </select>
    </div>
    
    <input type="submit" value="Фильтр"/>
</form>


<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortPhones="@ViewBag.NameSort">
                Название:
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortPhones="@ViewBag.CompanySort">
                Компания:
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortPhones="@ViewBag.CategorySort">
                Категория:
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortPhones="@ViewBag.PriceSort">
                Цена:
            </a>
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Phones) {
        <tr>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">@item.Name</a>
            </td>
            <td>
                <a asp-area="" asp-controller="Phones" asp-action="Index" asp-route-companyId="@item.CompanyId">@item.Company?.Name</a>
            </td>
            <td>
                <a asp-area="" asp-controller="Phones" asp-action="Index" asp-route-categoryId="@item.CategoryId">@item.Category?.Name</a>
            </td>
            <td>
                @item.Price
            </td>
        </tr>
    }
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}



@{ await Html.RenderPartialAsync("_Calendar"); }